"use strict";(self.webpackChunkfhenix_docs=self.webpackChunkfhenix_docs||[]).push([[5697],{7986:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var t=i(5893),r=i(1151);const s={sidebar_position:2,title:"\ud83d\udd00 Differences From Fhevm"},o=void 0,c={id:"devdocs/Fhenix Frontier/Details/Differences-From-Fhevm",title:"\ud83d\udd00 Differences From Fhevm",description:"You might be familiar with fhevm, which is a fork of the Ethereum Virtual Machine that supports homomorphic encryption by Zama.",source:"@site/docs/devdocs/Fhenix Frontier/Details/Differences-From-Fhevm.md",sourceDirName:"devdocs/Fhenix Frontier/Details",slug:"/devdocs/Fhenix Frontier/Details/Differences-From-Fhevm",permalink:"/docs/devdocs/Fhenix Frontier/Details/Differences-From-Fhevm",draft:!1,unlisted:!1,editUrl:"https://github.com/fhenixprotocol/fhenix-docs/tree/main/docs/devdocs/Fhenix Frontier/Details/Differences-From-Fhevm.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"\ud83d\udd00 Differences From Fhevm"},sidebar:"docsSidebar",previous:{title:"\ud83d\uded1 Limitations",permalink:"/docs/devdocs/Fhenix Frontier/Details/Limitations"},next:{title:"\ud83d\udd10 Encryption Schema",permalink:"/docs/devdocs/Fhenix Frontier/Details/Encryption-Schema"}},d={},a=[{value:"Differences",id:"differences",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"You might be familiar with fhevm, which is a fork of the Ethereum Virtual Machine that supports homomorphic encryption by Zama."}),"\n",(0,t.jsx)(n.p,{children:"While Fhenix uses a similar FHE technology, it does not use fhevm. Still, the two are similar in many ways. If you are familiar with one, the other should be easy to pick up."}),"\n",(0,t.jsx)(n.p,{children:"In this page, we try and document the differences users that are familiar with fhevm should be aware of."}),"\n",(0,t.jsx)(n.h2,{id:"differences",children:"Differences"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"fhenix.js is the recommended Javascript library for interacting with Fhenix smart contracts."}),"\n",(0,t.jsxs)(n.li,{children:["FHE library is available at the npm repository ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/@fhenixprotocol/contracts",children:"@fhenixprotocol/contracts"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"cmux"})," is named ",(0,t.jsx)(n.code,{children:"select"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"reencrypt"})," is named ",(0,t.jsx)(n.code,{children:"sealoutput"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Operations can be called directly as properties of encrypted types (e.g. ",(0,t.jsx)(n.code,{children:"euint32.add(euint32)"})," instead of ",(0,t.jsx)(n.code,{children:"FHE.add(euint32, euint32)"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["Operations between encrypted types expect the types to match (e.g. ",(0,t.jsx)(n.code,{children:"euint32 + euint32"})," instead of ",(0,t.jsx)(n.code,{children:"euint32 + euint64)"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["In Fhenix, we recommend using the ",(0,t.jsx)(n.code,{children:"inEuintXX"})," input types instead of raw bytes when receiving encrypted data."]}),"\n",(0,t.jsxs)(n.li,{children:["Conversion to other encrypted types can be done using the ",(0,t.jsx)(n.code,{children:".toUxx"})," functions. E.g. ",(0,t.jsx)(n.code,{children:"euint32 b = a.toU32();"})]}),"\n",(0,t.jsxs)(n.li,{children:["Division by zero will return a ",(0,t.jsx)(n.code,{children:"MAX_UINT"})," value instead of throwing an error (e.g. ",(0,t.jsx)(n.code,{children:"euint8(1) / euint8(0)"})," will return ",(0,t.jsx)(n.code,{children:"euint8(255)"})," instead of throwing an error)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Permits"})," and ",(0,t.jsx)(n.code,{children:"Permissioned"})," contracts are the recommended way to handle access to sensitive data in Fhenix. To read more about permits and access control, see ",(0,t.jsx)(n.a,{href:"/docs/devdocs/Encryption%20and%20Privacy/Permits-Access-Control",children:"Access Control"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Sealing and Decryption can be accessed using ",(0,t.jsx)(n.code,{children:".seal"})," and ",(0,t.jsx)(n.code,{children:".decrypt"})," respectively."]}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>o});var t=i(7294);const r={},s=t.createContext(r);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);