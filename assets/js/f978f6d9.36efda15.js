"use strict";(self.webpackChunkfhenix_docs=self.webpackChunkfhenix_docs||[]).push([[5112],{3804:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>u});var a=t(4848),r=t(8453),s=t(1470),i=t(9365);const c={sidebar_position:3},o="Writing the Contract",l={id:"devdocs/Tutorials/Basic/Writing-The-Contract",title:"Writing the Contract",description:"Let's get started with writing our first FHE powered contract.",source:"@site/versioned_docs/version-Helium/devdocs/Tutorials/Basic/Writing-The-Contract.md",sourceDirName:"devdocs/Tutorials/Basic",slug:"/devdocs/Tutorials/Basic/Writing-The-Contract",permalink:"/docs/devdocs/Tutorials/Basic/Writing-The-Contract",draft:!1,unlisted:!1,editUrl:"https://github.com/fhenixprotocol/fhenix-docs/tree/main/versioned_docs/version-Helium/devdocs/Tutorials/Basic/Writing-The-Contract.md",tags:[],version:"Helium",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Exploring the Template",permalink:"/docs/devdocs/Tutorials/Basic/Exploring the Template"},next:{title:"Adding View Functions",permalink:"/docs/devdocs/Tutorials/Basic/Adding View Functions"}},d={},u=[{value:"Importing FHE Libraries",id:"importing-fhe-libraries",level:3},{value:"Creating the Contract",id:"creating-the-contract",level:3},{value:"Inherit from ERC20",id:"inherit-from-erc20",level:4},{value:"Create Encrypted Balances",id:"create-encrypted-balances",level:4},{value:"Constructor",id:"constructor",level:4},{value:"Wrap",id:"wrap",level:4},{value:"Unwrap",id:"unwrap",level:4},{value:"Encrypted Transfers",id:"encrypted-transfers",level:4},{value:"Wait a second...",id:"wait-a-second",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"writing-the-contract",children:"Writing the Contract"}),"\n",(0,a.jsx)(n.p,{children:"Let's get started with writing our first FHE powered contract."}),"\n",(0,a.jsxs)(n.p,{children:["Let's create a new file in ",(0,a.jsx)(n.code,{children:"contracts/"}),", and call that ",(0,a.jsx)(n.code,{children:"WrappingERC20.sol"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"touch contracts/WrappingERC20.sol\n"})}),"\n",(0,a.jsx)(n.p,{children:"Our goal is to create an ERC20 contract that supports shielded balances.\nLet's run through the different functions, step-by-step and show how we can implement each. We'll also link to more detailed explanations about the custom functionality we make use of."}),"\n",(0,a.jsx)(n.h3,{id:"importing-fhe-libraries",children:"Importing FHE Libraries"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport "@openzeppelin/contracts/token/ERC20/ERC20.sol";\nimport "@fhenixprotocol/contracts/FHE.sol";\n'})}),"\n",(0,a.jsxs)(n.p,{children:["The OpenZeppelin ERC20 contract will provide the basic functionality of the ERC20 token, while ",(0,a.jsx)(n.code,{children:"FHE.sol"})," is necessary to create and use FHE."]}),"\n",(0,a.jsx)(n.p,{children:"We'll also have to install the OpenZeppelin contracts, since they are not part of the default template."}),"\n",(0,a.jsxs)(s.A,{groupId:"package-managers",children:[(0,a.jsx)(i.A,{value:"npm",label:"npm",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install @openzeppelin/contracts\n"})})}),(0,a.jsx)(i.A,{value:"yarn",label:"yarn",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn install @openzeppelin/contracts\n"})})}),(0,a.jsx)(i.A,{value:"pnpm",label:"pnpm",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pnpm install @openzeppelin/contracts\n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"creating-the-contract",children:"Creating the Contract"}),"\n",(0,a.jsx)(n.h4,{id:"inherit-from-erc20",children:"Inherit from ERC20"}),"\n",(0,a.jsxs)(n.p,{children:["The contract WrappingERC20 is an ERC20 contract. It uses function calls from ",(0,a.jsx)(n.code,{children:"FHE.sol"})," for encryption and to keep balances private and only viewable by the holder of the correct decryption key."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"contract WrappingERC20 is ERC20 {\n\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"create-encrypted-balances",children:"Create Encrypted Balances"}),"\n",(0,a.jsxs)(n.p,{children:["An encrypted balance is initialized for each address, ",(0,a.jsx)(n.code,{children:"_encBalances"}),", which will hold encrypted token balances for users. The ",(0,a.jsx)(n.code,{children:"euintXXX"})," are encrypted data types that represent FHE-encrypted unsigned integers of various bit lengths."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"mapping(address => euint32) internal _encBalances;\n"})}),"\n",(0,a.jsx)(n.h4,{id:"constructor",children:"Constructor"}),"\n",(0,a.jsx)(n.p,{children:"The constructor function sets the name and symbol of the token, and then mints an initial 100 tokens to the address that deploys the contract."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n     _mint(msg.sender, 100 * 10 ** uint(decimals()));\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"wrap",children:"Wrap"}),"\n",(0,a.jsxs)(n.p,{children:["First, let's define a function ",(0,a.jsx)(n.code,{children:"wrap(uint32 amount)"})," that allows users to convert (wrap) their tokens into encrypted form.\nThe function will burn a specified amount from the user's balance and add the same amount to their encrypted balance."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function wrap(uint32 amount) public {\n    // Make sure that the sender has enough of the public balance\n    require(balanceOf(msg.sender) >= amount);\n    // Burn public balance\n    _burn(msg.sender, amount);\n\n    // convert public amount to shielded by encrypting it\n    euint32 shieldedAmount = FHE.asEuint32(amount);\n    // Add shielded balance to his current balance\n    _encBalances[msg.sender] = _encBalances[msg.sender] + shieldedAmount;\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Breaking this down, the following logic is performed:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Verify that the user has enough public tokens to wrap"}),"\n",(0,a.jsx)(n.li,{children:"Burn public tokens"}),"\n",(0,a.jsx)(n.li,{children:"Add shielded tokens to the caller's balance"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"There are two main FHE operations that happened here:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"FHE.asEuint32(amount)"})," - this converted a standard, public ",(0,a.jsx)(n.code,{children:"uint"})," to an FHE-encrypted number"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_encBalances[msg.sender] + shieldedAmount"})," - this performs homomorphic addition between the two encrypted numbers ",(0,a.jsx)(n.code,{children:"shieldedAmount"})," and ",(0,a.jsx)(n.code,{children:"_encBalances[msg.sender]"})]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["Even though we called ",(0,a.jsx)(n.code,{children:"FHE.asEuint32()"})," on a public value and encrypted it we did not actually hide any information - the plaintext value was already known beforehand"]})}),"\n",(0,a.jsx)(n.h4,{id:"unwrap",children:"Unwrap"}),"\n",(0,a.jsxs)(n.p,{children:["Next, let's define ",(0,a.jsx)(n.code,{children:"unwrap(inEuint32 amount)"}),". This function will allow users to convert (unwrap) their encrypted tokens back into public tokens.\nThe function will remove the specified amount from the user's encrypted balance and add the same amount to the user's public balance."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function unwrap(inEuint32 memory amount) public {\n    euint32 _amount = FHE.asEuint32(amount);\n    // verify that our shielded balance is greater or equal than the requested amount. (gte = greater-than-or-equal)\n    FHE.req(_encBalances[msg.sender].gte(_amount));\n    // subtract amount from shielded balance\n    _encBalances[msg.sender] = _encBalances[msg.sender] - _amount;\n    // add amount to caller's public balance by calling the `mint` function\n    _mint(msg.sender, FHE.decrypt(_amount));\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"Here we can see a few interesting things:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"FHE.req"})," (stands for FHE require) verifies that a statement is true, or reverts the function. We use this to verify that we have enough shielded amount."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"_encBalances[msg.sender].gte(_amount)"})," checks that ",(0,a.jsx)(n.code,{children:"_encBalances[msg.sender]"})," is ",(0,a.jsx)(n.strong,{children:"g"}),"rea",(0,a.jsx)(n.strong,{children:"t"}),"er or ",(0,a.jsx)(n.strong,{children:"e"}),"qual than ",(0,a.jsx)(n.code,{children:"_amount"})]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"inEuint32"})," is a data type specifically for input parameters. You can read more about it ",(0,a.jsx)(n.a,{href:"/docs/devdocs/Writing%20Smart%20Contracts/User-Inputs",children:"here"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"encrypted-transfers",children:"Encrypted Transfers"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"transferEncrypted(address to, bytes calldata encryptedAmount)"})," is a public function that transfers encrypted tokens from the function caller to the to address. It converts the encrypted amount into the encrypted integer form ",(0,a.jsx)(n.code,{children:"euint32"})," using the ",(0,a.jsx)(n.code,{children:"FHE.asEuint32(encryptedAmount)"})," function and then calls ",(0,a.jsx)(n.code,{children:"_transferEncrypted"}),".\nThe function ",(0,a.jsx)(n.code,{children:"_transferEncrypted(address to, euint32 amount)"})," is an internal function that just calls _transferImpl.\n",(0,a.jsx)(n.code,{children:"_transferImpl(address from, address to, euint32 amount)"})," performs the actual transfer. It checks if the sender has enough tokens, then adds the amount to the address encrypted balance and subtracts the same amount from the address encrypted balance."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"function transferEncrypted(address to, inEuint32 calldata encryptedAmount) public {\n    euint32 amount = FHE.asEuint32(encryptedAmount);\n    // Make sure the sender has enough tokens. (lte = less-then-or-equal)\n    FHE.req(amount.lte(_encBalances[msg.sender]));\n\n    // Add to the balance of `to` and subract from the balance of `msg.sender`.\n    _encBalances[to] = _encBalances[to] + amount;\n    _encBalances[msg.sender] = _encBalances[msg.sender] - amount;\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"And that's it! To recap, we just created a contract that allows users to wrap and unwrap their tokens, and transfer them in encrypted form."}),"\n",(0,a.jsx)(n.p,{children:"Let's see what the entire code looks like:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport "@openzeppelin/contracts/token/ERC20/ERC20.sol";\nimport "@fhenixprotocol/contracts/FHE.sol";\n\ncontract WrappingERC20 is ERC20 {\n\n    mapping(address => euint32) internal _encBalances;\n\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        _mint(msg.sender, 100 * 10 ** uint(decimals()));\n    }\n\n    function wrap(uint32 amount) public {\n        // Make sure that the sender has enough of the public balance\n        require(balanceOf(msg.sender) >= amount);\n        // Burn public balance\n        _burn(msg.sender, amount);\n\n        // convert public amount to shielded by encrypting it\n        euint32 shieldedAmount = FHE.asEuint32(amount);\n        // Add shielded balance to his current balance\n        _encBalances[msg.sender] = _encBalances[msg.sender] + shieldedAmount;\n    }\n\n    function unwrap(inEuint32 memory amount) public {\n        euint32 _amount = FHE.asEuint32(amount);\n        // verify that our shielded balance is greater or equal than the requested amount \n        FHE.req(_encBalances[msg.sender].gte(_amount));\n        // subtract amount from shielded balance\n        _encBalances[msg.sender] = _encBalances[msg.sender] - _amount;\n        // add amount to caller\'s public balance by calling the `mint` function\n        _mint(msg.sender, FHE.decrypt(_amount));\n    }\n\n    function transferEncrypted(address to, inEuint32 calldata encryptedAmount) public {\n        euint32 amount = FHE.asEuint32(encryptedAmount);\n        // Make sure the sender has enough tokens.\n        FHE.req(amount.lte(_encBalances[msg.sender]));\n\n        // Add to the balance of `to` and subract from the balance of `from`.\n        _encBalances[to] = _encBalances[to] + amount;\n        _encBalances[msg.sender] = _encBalances[msg.sender] - amount;\n    }\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Note that in a real use case the actual code would include more functionality, and structure things a bit differently.\nIf you want to see what such a contract looks like, you can check out the ",(0,a.jsx)(n.a,{href:"https://github.com/FhenixProtocol/fhenix-contracts/blob/main/contracts/experimental/token/FHERC20/FHERC20.sol",children:"FHERC20"})," contract in the Fhenix contracts repository."]}),"\n",(0,a.jsx)(n.h3,{id:"wait-a-second",children:"Wait a second..."}),"\n",(0,a.jsxs)(n.p,{children:["But what about viewing the encrypted balances? Well, we'll cover that in the next section, where we'll be adding viewing\nfunctionality to our contract, and see how we can utilize ",(0,a.jsx)(n.code,{children:"Permissions"})," to manage access to encrypted data."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var a=t(4164);const r={tabItem:"tabItem_Ymn6"};var s=t(4848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,i),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>w});var a=t(6540),r=t(4164),s=t(3104),i=t(6347),c=t(205),o=t(7485),l=t(1682),d=t(679);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,l.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,i.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=h(e),[i,o]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[l,u]=m({queryString:t,groupId:r}),[f,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,d.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),b=(()=>{const e=l??f;return p({value:e,tabValues:s})?e:null})();(0,c.A)((()=>{b&&o(b)}),[b]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),g(e)}),[u,g,s]),tabValues:s}}var g=t(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(4848);function j(e){let{className:n,block:t,selectedValue:a,selectValue:i,tabValues:c}=e;const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=o.indexOf(n),r=c[t].value;r!==a&&(l(n),i(r))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:c.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>o.push(e),onKeyDown:u,onClick:d,...s,className:(0,r.A)("tabs__item",b.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:r}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function v(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",b.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(y,{...n,...e})]})}function w(e){const n=(0,g.A)();return(0,x.jsx)(v,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var a=t(6540);const r={},s=a.createContext(r);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);