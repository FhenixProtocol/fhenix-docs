"use strict";(self.webpackChunkfhenix_docs=self.webpackChunkfhenix_docs||[]).push([[6863],{6559:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var i=t(4848),a=t(8453);const r={sidebar_position:3},c=void 0,s={id:"tutorial/Basic/Adding View Functions",title:"Adding View Functions",description:"Adding Encrypted Balance Retrieval",source:"@site/docs/tutorial/Basic/Adding View Functions.md",sourceDirName:"tutorial/Basic",slug:"/tutorial/Basic/Adding View Functions",permalink:"/docs/tutorial/Basic/Adding View Functions",draft:!1,unlisted:!1,editUrl:"https://github.com/fhenixprotocol/fhenix-docs/tree/main/docs/tutorial/Basic/Adding View Functions.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Writing the Contract",permalink:"/docs/tutorial/Basic/Writing-The-Contract"},next:{title:"Deploying (WIP)",permalink:"/docs/tutorial/Basic/Deploying"}},o={},l=[{value:"Adding Encrypted Balance Retrieval",id:"adding-encrypted-balance-retrieval",level:2},{value:"Defining the Function",id:"defining-the-function",level:3},{value:"Off-Chain Signature Generation",id:"off-chain-signature-generation",level:3},{value:"Executing the Function",id:"executing-the-function",level:3},{value:"Putting it All Together",id:"putting-it-all-together",level:3}];function d(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"adding-encrypted-balance-retrieval",children:"Adding Encrypted Balance Retrieval"}),"\n",(0,i.jsxs)(n.p,{children:["To enhance our contract with secure balance viewing, we're going to implement a ",(0,i.jsx)(n.code,{children:"getBalanceEncrypted()"})," function. This function will employ permissions to enforce access control, ensuring that only the rightful owner can retrieve and decrypt their encrypted balance."]}),"\n",(0,i.jsx)(n.h3,{id:"defining-the-function",children:"Defining the Function"}),"\n",(0,i.jsxs)(n.p,{children:["We'll start by adding a new function to our ",(0,i.jsx)(n.code,{children:"WrappingERC20"})," contract. This function will use the ",(0,i.jsx)(n.code,{children:"onlySender(perm)"})," modifier from the ",(0,i.jsx)(n.code,{children:"Permissioned"})," contract to ensure that only the message sender, validated through a signature, can access their encrypted balance."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"function getBalanceEncrypted(Permission calldata perm) public view onlySender(perm) returns (euint32) {\n    return _encBalances[msg.sender];\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"off-chain-signature-generation",children:"Off-Chain Signature Generation"}),"\n",(0,i.jsx)(n.p,{children:"Users will need to generate a signature off-chain, using EIP-712 to sign their balance retrieval request. This signature proves that the user has authorized the retrieval of their encrypted balance."}),"\n",(0,i.jsx)(n.h3,{id:"executing-the-function",children:"Executing the Function"}),"\n",(0,i.jsxs)(n.p,{children:["When calling ",(0,i.jsx)(n.code,{children:"getBalanceEncrypted()"}),", the user includes their off-chain generated signature as a parameter. The function will execute only if the signature is valid and matches the ",(0,i.jsx)(n.code,{children:"msg.sender"}),", returning the user's encrypted balance."]}),"\n",(0,i.jsx)(n.h3,{id:"putting-it-all-together",children:"Putting it All Together"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'pragma solidity ^0.8.20;\n\nimport "@fhenixprotocol/contracts/access/Permissioned.sol";\nimport "@openzeppelin/contracts/token/ERC20/ERC20.sol";\nimport "@fhenixprotocol/contracts/FHE.sol";\n\ncontract WrappingERC20 is ERC20, Permissioned {\n\n    mapping(address => euint32) internal _encBalances;\n\n    constructor(string memory name, string memory symbol) ERC20(name, symbol) {\n        _mint(msg.sender, 100 * 10 ** uint(decimals()));\n    }\n\n    function wrap(uint32 amount) public {\n        // Make sure that the sender has enough of the public balance\n        require(balanceOf(msg.sender) >= amount);\n        // Burn public balance\n        _burn(msg.sender, amount);\n\n        // convert public amount to shielded by encrypting it\n        euint32 shieldedAmount = FHE.asEuint32(amount);\n        // Add shielded balance to his current balance\n        _encBalances[msg.sender] = _encBalances[msg.sender] + shieldedAmount;\n    }\n\n    function unwrap(inEuint32 memory amount) public {\n        euint32 _amount = FHE.asEuint32(amount);\n        // verify that our shielded balance is greater or equal than the requested amount \n        FHE.req(_encBalances[msg.sender].gte(_amount));\n        // subtract amount from shielded balance\n        _encBalances[msg.sender] = _encBalances[msg.sender] - _amount;\n        // add amount to caller\'s public balance by calling the `mint` function\n        _mint(msg.sender, FHE.decrypt(_amount));\n    }\n\n    function transferEncrypted(address to, inEuint32 calldata encryptedAmount) public {\n        euint32 amount = FHE.asEuint32(encryptedAmount);\n        // Make sure the sender has enough tokens.\n        FHE.req(amount.lte(_encBalances[msg.sender]));\n\n        // Add to the balance of `to` and subract from the balance of `from`.\n        _encBalances[to] = _encBalances[to] + amount;\n        _encBalances[msg.sender] = _encBalances[msg.sender] - amount;\n    }\n    \n    function getBalanceEncrypted(Permission calldata perm) \n    public \n    view \n    onlySender(perm) \n    returns (uint256) {\n        return FHE.decrypt(_encBalances[msg.sender]);\n    }\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>s});var i=t(6540);const a={},r=i.createContext(a);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);