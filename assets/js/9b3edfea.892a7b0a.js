"use strict";(self.webpackChunkfhenix_docs=self.webpackChunkfhenix_docs||[]).push([[2222],{3742:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var o=n(5893),i=n(1151);const s={sidebar_position:1,description:"Installation of contracts and creating a basic contract"},a="\ud83d\udc24 Getting Started",r={id:"devdocs/Writing Smart Contracts/FHE-sol",title:"\ud83d\udc24 Getting Started",description:"Installation of contracts and creating a basic contract",source:"@site/docs/devdocs/Writing Smart Contracts/FHE-sol.md",sourceDirName:"devdocs/Writing Smart Contracts",slug:"/devdocs/Writing Smart Contracts/FHE-sol",permalink:"/fhenix-docs/docs/devdocs/Writing Smart Contracts/FHE-sol",draft:!1,unlisted:!1,editUrl:"https://github.com/fhenixprotocol/fhenix-docs/main/docs/devdocs/Writing Smart Contracts/FHE-sol.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Installation of contracts and creating a basic contract"},sidebar:"docsSidebar",previous:{title:"FHE Contracts",permalink:"/fhenix-docs/docs/category/fhe-contracts"},next:{title:"\ud83d\udc49 Inputs",permalink:"/fhenix-docs/docs/devdocs/Writing Smart Contracts/User-Inputs"}},c={},d=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Calling a Contract with Encrypted Inputs",id:"calling-a-contract-with-encrypted-inputs",level:3},{value:"Operations Example",id:"operations-example",level:3},{value:"Decrypting Outputs",id:"decrypting-outputs",level:3}];function l(t){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"-getting-started",children:"\ud83d\udc24 Getting Started"}),"\n",(0,o.jsx)(e.p,{children:"A core component of the Fhenix ecosystem is the FHE.sol solidity library. It serves as the bridge from the public to the private EVM.\nIt is a Solidity library that provides a set of functions that can be used to encrypt and decrypt data."}),"\n",(0,o.jsxs)(e.p,{children:["To find a full list of functions and their descriptions, please refer to the ",(0,o.jsx)(e.a,{href:"/fhenix-docs/docs/devdocs/Solidity%20API/FHE",children:"FHE.sol documentation"}),"."]}),"\n",(0,o.jsx)(e.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(e.p,{children:"To get started with FHE.sol, you need to install it as a dependency in your Solidity project. You can do this using npm (Node Package Manager) or Yarn. Open your terminal and navigate to your project's directory, then run the following:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-Javascript",children:'import {FHE} from "@fhenixprotocol/contracts/FHE.sol";\n'})}),"\n",(0,o.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(e.h3,{id:"calling-a-contract-with-encrypted-inputs",children:"Calling a Contract with Encrypted Inputs"}),"\n",(0,o.jsx)(e.h3,{id:"operations-example",children:"Operations Example"}),"\n",(0,o.jsx)(e.h3,{id:"decrypting-outputs",children:"Decrypting Outputs"})]})}function p(t={}){const{wrapper:e}={...(0,i.a)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(l,{...t})}):l(t)}},1151:(t,e,n)=>{n.d(e,{Z:()=>r,a:()=>a});var o=n(7294);const i={},s=o.createContext(i);function a(t){const e=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:a(t.components),o.createElement(s.Provider,{value:e},t.children)}}}]);